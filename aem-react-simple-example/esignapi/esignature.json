{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "priyanka.gandotra@nab.com.au",
      "name": "Priyanka"
    },
    "x-appId": "PL0461",
    "description": "ESignature APIs\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "license": {
      "name": "(C) 2020 National Australia Bank. [All rights reserved]. This product and related documentation are protected by copyright restricting its use, copying, distribution, and decompilation. No part of this product or related documentation may be reproduced in any form by any means without prior written authorization of National Australia Bank. Unless otherwise arranged, third parties may not have access to this product or related documents."
    },
    "title": "Esignature",
    "version": "v1.8"
  },
  "servers": [
    {
      "url": "https://stg10.docmgmt.intapi.extnp.national.com.au/v1/docmgmt"
    }
  ],
  "paths": {
    "/envelopes": {
      "x-swagstar": {
        "name": "CreateEnvelope",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "application/json",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "properties": {
                          "document": {
                            "example": "/<basePath>/envelopes/<envelopeId>/documents/<documentId>",
                            "type": "string"
                          },
                          "documentId": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "envelopeDetails": {
                      "example": "/<basePath>/envelopes/<envelopeId>",
                      "type": "string"
                    },
                    "envelopeId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the exception could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "createEnvelopeFrom": {
                    "description": "to indicate if the envelope is created from template.",
                    "enum": [
                      "TEMPLATE_DEFINITION"
                    ],
                    "type": "string"
                  },
                  "documents": {
                    "items": {
                      "properties": {
                        "base64": {
                          "description": "The contents of the document encoded as base64",
                          "type": "string"
                        },
                        "documentId": {
                          "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
                          "maxLength": 15,
                          "type": "string"
                        },
                        "fileExtension": {
                          "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an \"unable to load document\" error message",
                          "maxLength": 5,
                          "type": "string"
                        },
                        "isSupplimental": {
                          "description": "Value which indicates weather this is a primary document or supplementary",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "supplimentalAckType": {
                          "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
                          "enum": [
                            "view",
                            "view_accept",
                            "view_read_accept"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "documentId",
                        "base64",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "emailSubject": {
                    "maxLength": 30,
                    "type": "string"
                  },
                  "expireAfterInDays": {
                    "maximum": 99,
                    "minimum": 1,
                    "type": "number"
                  },
                  "recipients": {
                    "items": {
                      "properties": {
                        "email": {
                          "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "id": {
                          "description": "Recipient Id",
                          "type": "number"
                        },
                        "mobile": {
                          "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
                          "maxLength": 14,
                          "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                          "type": "string"
                        },
                        "name": {
                          "description": "Full legal name of the recipient",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "roleName": {
                          "description": "Signer Rolename is non-mandatory.",
                          "enum": [
                            "SIGNER1",
                            "SIGNER2",
                            "SIGNER3",
                            "SIGNER4",
                            "SIGNER5",
                            "SIGNER6",
                            "SIGNER7",
                            "SIGNER8",
                            "SIGNER9",
                            "SIGNER10"
                          ],
                          "type": "string"
                        },
                        "routingOrder": {
                          "description": "Required if the routingOrderType is set to SEQUENTIAL",
                          "maximum": 99,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "required": [
                        "email",
                        "name",
                        "mobile"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "routingOrderType": {
                    "description": "The workflow setting which decides weather recipient will action parallelly or sequentially",
                    "enum": [
                      "SEQUENTIAL",
                      "PARALLEL"
                    ],
                    "type": "string"
                  },
                  "templateId": {
                    "description": "Id of the template in DocuSign. Mandatory when envelopeFrom is 'TEAMPLATE_DEFINITION'",
                    "type": "string"
                  }
                },
                "required": [
                  "emailSubject",
                  "documents",
                  "recipients",
                  "routingOrderType",
                  "createEnvelopeFrom"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create Envelope",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "request-size-limiting": {
              "allowed_payload_size": 100
            },
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:createenvelope"
              ]
            }
          }
        }
      }
    },
    "/digital-envelopes": {
      "x-swagstar": {
        "name": "CreateDigitalEnvelope",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "application/json",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "properties": {
                          "document": {
                            "example": "/<basePath>/envelopes/<nabEnvelopeId>/documents/<documentId>",
                            "type": "string"
                          },
                          "documentId": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "envelopeDetails": {
                      "example": "/<basePath>/envelopes/<nabEnvelopeId>",
                      "type": "string"
                    },
                    "nabEnvelopeId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the exception could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "brandId": {
                    "description": "brand Id to be used for a given envelope. This brand is reflected at Docusign.",
                    "type": "string"
                  },
                  "createEnvelopeFrom": {
                    "description": "to indicate if the envelope is created from template or the fields in the payload",
                    "enum": [
                      "FIELDS_DEFINITION",
                      "MULTIPLE_ENVELOPE_DEFINITION",
                      "TEMPLATE_DEFINITION",
                      "COMPOSITE_TEMPLATE_DEFINITION"
                    ],
                    "type": "string"
                  },
                  "prepopulateData": {
                    "description": "if true then need fields array under recipients is mandatory",
                    "type": "boolean"
                  },
                  "emailChannel": {
                    "maxLength": 20,
                    "type": "string",
                    "description": "By default all emails will be sent via nab.com.au channel. If any other domain required, relevant channel need to be provided.Example ADF-NABC."
                  },
                  "archiveCOC": {
                    "type": "boolean",
                    "default": false,
                    "description": "This flag is required if you need to store Certificate in Completion to archival."
                  },
                  "cocDocTypeKey": {
                    "type": "string",
                    "description": "This doctypekey is provided by DMSL team."
                  },
                  "documents": {
                    "items": {
                      "properties": {
                        "archiveDocument": {
                          "description": "if set to be yes then push to DMSL else do not store in DMSL",
                          "type": "string"
                        },
                        "docTypeKey": {
                          "description": "doctypekey for each document to store in DMSL",
                          "type": "string"
                        },
                        "base64": {
                          "description": "The contents of the document encoded as base64",
                          "type": "string"
                        },
                        "documentId": {
                          "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
                          "maxLength": 15,
                          "type": "string"
                        },
                        "fileExtension": {
                          "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an error message",
                          "maxLength": 5,
                          "type": "string"
                        },
                        "isSupplimental": {
                          "description": "Value which indicates whether this is a primary document or supplementary",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "supplimentalAckType": {
                          "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
                          "enum": [
                            "VIEW",
                            "VIEW_ACCEPT",
                            "VIEW_READ_ACCEPT"
                          ],
                          "type": "string"
                        },
                        "templateId": {
                          "description": "A user-specified ID that identifies DocuSign Template.",
                          "type": "string"
                        },
                        "displayOrder": {
                          "type": "integer",
                          "description": "Order of the documents to be displayed on NAB Docs. DisplayOrder is applicable for MULTIPLE_ENVELOPE_DEFINITION and TEMPLATE_DEFINITION."
                        }
                      },
                      "required": [
                        "base64",
                        "name",
                        "documentId"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "emailParams": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "businessParams": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "These are additonal params that business needs for a given envelopeId."
                  },
                  "emailSubject": {
                    "maxLength": 30,
                    "type": "string"
                  },
                  "expireAfterInDays": {
                    "maximum": 99,
                    "minimum": 1,
                    "type": "number"
                  },
                  "recipients": {
                    "items": {
                      "properties": {
                        "associatedDocs": {
                          "items": {
                            "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
                            "properties": {
                              "documentId": {
                                "description": "to indicate documents associated with particular recipient.",
                                "maxLength": 15,
                                "type": "string"
                              }
                            },
                            "required": [
                              "documentId"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "email": {
                          "description": "Email id of the recipient. Notification of the document to sign is sent to this email id.",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fields": {
                          "items": {
                            "properties": {
                              "anchorIgnoreIfNotPresent": {
                                "description": "Set to True.  Anchortext in the document and skip over if the field is not required",
                                "type": "boolean"
                              },
                              "anchorString": {
                                "description": "Unique for each recipient signature field, needs to be present on the Document to place the field",
                                "maxLength": 30,
                                "type": "string"
                              },
                              "documentId": {
                                "description": "This is ID should link back to the doucmentID given under the documents array",
                                "maxLength": 15,
                                "type": "string"
                              },
                              "label": {
                                "description": "The Label for the date field",
                                "maxLength": 30,
                                "type": "string"
                              },
                              "required": {
                                "description": "Parameter to set Mandatory or Optional Field",
                                "type": "boolean"
                              },
                              "type": {
                                "enum": [
                                  "SIGN",
                                  "INITIALS",
                                  "DATE",
                                  "NUMERIC",
                                  "TEXT"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The data value for the a given label",
                                "type": "string"
                              },
                              "name": {
                                "description": "The HREF value for the given link",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "documentId",
                              "anchorString",
                              "anchorIgnoreIfNotPresent"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "A user-specified ID that identifies the Recipient. If no value is provided, auto generated UUID will be stored.",
                          "type": "number"
                        },
                        "mobile": {
                          "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process. This value should be unique.",
                          "maxLength": 14,
                          "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                          "type": "string"
                        },
                        "name": {
                          "description": "Full legal name of the recipient",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "roleName": {
                          "description": "Signer Rolename is mandatory in Template based Envelope Creation.",
                          "enum": [
                            "SIGNER1",
                            "SIGNER2",
                            "SIGNER3",
                            "SIGNER4",
                            "SIGNER5",
                            "SIGNER6",
                            "SIGNER7",
                            "SIGNER8",
                            "SIGNER9",
                            "SIGNER10",
                            "SIGNER11",
                            "SIGNER12",
                            "SIGNER13",
                            "SIGNER14",
                            "SIGNER15",
                            "SIGNER16",
                            "SIGNER17",
                            "SIGNER18",
                            "SIGNER19",
                            "SIGNER20",
                            "SIGNER21",
                            "SIGNER22",
                            "SIGNER23",
                            "SIGNER24",
                            "SIGNER25",
                            "SIGNER26",
                            "SIGNER27",
                            "SIGNER28",
                            "SIGNER29",
                            "SIGNER30",
                            "SIGNER31",
                            "SIGNER32",
                            "SIGNER33",
                            "SIGNER34",
                            "SIGNER35",
                            "SIGNER36",
                            "SIGNER37",
                            "SIGNER38",
                            "SIGNER39",
                            "SIGNER40",
                            "SIGNER41",
                            "SIGNER42",
                            "SIGNER43",
                            "SIGNER44",
                            "SIGNER45",
                            "SIGNER46",
                            "SIGNER47",
                            "SIGNER48",
                            "SIGNER49",
                            "SIGNER50"
                          ],
                          "type": "string"
                        },
                        "commName": {
                          "description": "Name of the recipient to be used for Email Comms. Special Character allowed",
                          "maxLength": 20,
                          "type": "string"
                        },
                        "routingOrder": {
                          "description": "Required if the routingOrderType is set to SEQUENTIAL",
                          "maximum": 99,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "email",
                        "mobile"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "routingOrderType": {
                    "description": "The workflow setting which decides weather recipient will action parallelly or sequentially",
                    "enum": [
                      "SEQUENTIAL",
                      "PARALLEL"
                    ],
                    "type": "string"
                  },
                  "wetSignedEnabled": {
                    "description": "If wetsigned = true then Print and Sign to be enabled at Docusign else adopt signature to be enabled.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "createEnvelopeFrom",
                  "documents",
                  "emailSubject",
                  "routingOrderType",
                  "recipients",
                  "wetSignedEnabled"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create Digital Envelope",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "request-size-limiting": {
              "allowed_payload_size": 100
            },
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:createdigitalenvelope"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}": {
      "x-swagstar": {
        "name": "EnvelopeById",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "certificateOfCompletionUri": {
                      "example": "/<basePath>/envelopes/{envelopeId}/documents/certificate",
                      "type": "string"
                    },
                    "declineBy": {
                      "type": "string"
                    },
                    "declineReason": {
                      "type": "string"
                    },
                    "brandId": {
                      "description": "brand Id to be used for a given envelope.",
                      "type": "string"
                    },
                    "emailChannel": {
                      "maxLength": 20,
                      "type": "string"
                    },
                    "archiveCOC": {
                      "type": "boolean",
                      "default": false
                    },
                    "cocDocTypeKey": {
                      "type": "string"
                    },
                    "emailParams": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "businessParams": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "documents": {
                      "items": {
                        "properties": {
                          "docSize": {
                            "description": "Size of the document",
                            "type": "string"
                          },
                          "id": {
                            "description": "A user-specified ID that identifies this document. This will be used to associate the document by the calling system at a later stage. This has to be unique wihtin the Envelope",
                            "type": "string"
                          },
                          "isSupplimental": {
                            "description": "Value which indicates weather this is a primary document or supplementary",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                            "type": "string"
                          },
                          "uri": {
                            "description": "URI of the document download in base64",
                            "example": "/envelopes/{envelopeId}/documents/{documentId}",
                            "type": "string"
                          },
                          "displayOrder": {
                            "description": "DisplayOrder of the document",
                            "type": "number"
                          },
                          "archiveDocument": {
                            "description": "if set to be yes then push to DMSL else do not store in DMSL",
                            "type": "string"
                          },
                          "docTypeKey": {
                            "description": "doctypekey for each document to store in DMSL",
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "envelopeId": {
                            "type": "string"
                          },
                          "staticDoc": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "uri",
                          "name",
                          "isSupplimental",
                          "docSize"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "emailSubject": {
                      "type": "string"
                    },
                    "expireAfterInDays": {
                      "maximum": 99,
                      "minimum": 1,
                      "type": "number"
                    },
                    "recipients": {
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "email": {
                                "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "id": {
                                "description": "Recipient Id",
                                "type": "number"
                              },
                              "mobile": {
                                "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
                                "maxLength": 14,
                                "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                                "type": "string"
                              },
                              "name": {
                                "description": "Full legal name of the recipient",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "roleName": {
                                "description": "Signer Rolename is non-mandatory.",
                                "enum": [
                                  "SIGNER1",
                                  "SIGNER2",
                                  "SIGNER3",
                                  "SIGNER4",
                                  "SIGNER5",
                                  "SIGNER6",
                                  "SIGNER7",
                                  "SIGNER8",
                                  "SIGNER9",
                                  "SIGNER10"
                                ],
                                "type": "string"
                              },
                              "routingOrder": {
                                "description": "Required if the routingOrderType is set to SEQUENTIAL",
                                "maximum": 99,
                                "minimum": 0,
                                "type": "number"
                              }
                            },
                            "required": [
                              "email",
                              "name",
                              "mobile"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "recipientStatus": {
                                "type": "string"
                              },
                              "associatedDocs": {
                                "items": {
                                  "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
                                  "properties": {
                                    "documentId": {
                                      "description": "to indicate documents associated with particular recipient.",
                                      "maxLength": 15,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "documentId"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "routingOrderType": {
                      "description": "specifies if there is a set order for the documents to be signed or if all signers can sign in any sequense",
                      "enum": [
                        "SEQUENTIAL",
                        "PARALLEL"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "enum": [
                        "SENT",
                        "COMPLETED",
                        "VOIDED",
                        "DECLINED"
                      ],
                      "type": "string"
                    },
                    "wetSignedEnabled": {
                      "type": "boolean"
                    },
                    "envelopeCreationDate": {
                      "type": "string"
                    },
                    "envelopeExpiryDate": {
                      "type": "string"
                    },
                    "remainingDaysToExpire": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "wetSignedEnabled",
                    "status",
                    "emailSubject",
                    "documents",
                    "recipients"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Retrieve Envelope",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:retrieveenvelope"
              ]
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Delete Envelope",
        "x-swagstar": {
          "name": "DeleteEnvelopeById",
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:deleteenvelope"
              ]
            }
          }
        }
      }
    },
    "/envelopes/signinguri": {
      "x-swagstar": {
        "name": "CreateSignerUri",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uri": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the exception could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Retrieve Signing URI",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:createsigneruri"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/metadata": {
      "x-swagstar": {
        "name": "EnvelopeMetadataById",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "application/json",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "envelopeId": {
                      "type": "string"
                    },
                    "metaData": {
                      "items": {
                        "properties": {
                          "anchorString": {
                            "description": "Anchor string is identifier passsed aspart of the request or defined in template for the individual ui controls in case of text box.\\nGroup name/label for radio buttons and checkbox control which are grouped controls",
                            "example": [
                              "FNQ_1"
                            ],
                            "type": "string"
                          },
                          "values": {
                            "items": {
                              "description": "1.Text boxes - value will be the value entered in the text box 2.Radio Buttons: value will be the value of the selected radio button. 3.Checkbox: value will be array of the concatanated string with individual anchor string and checked statuslike [\"FNQ_1:checked\",\"FNQ_2:\"\"\"].  ",
                              "example": "1.Text box : \"entered text by user\"\n2.Radio Button: 1 or 0\n3.Check boxes : [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "recipientMetaData": {
                      "items": {
                        "properties": {
                          "deliveredTime": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "metaData": {
                            "items": {
                              "properties": {
                                "anchorString": {
                                  "description": "Anchor string is identifier passsed aspart of the request or defined in template for the individual ui controls in case of text box.\\nGroup name/label for radio buttons and checkbox control which are grouped controls",
                                  "example": [
                                    "FNQ_1"
                                  ],
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "description": "1.Text boxes - value will be the value entered in the text box 2.Radio Buttons: value will be the value of the selected radio button. 3.Checkbox: value will be array of the concatanated string with individual anchor string and checked status like [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]. ",
                                    "example": "1.Text box : \"entered text by user\"\n2.Radio Button: 1 or 0\n3.Check boxes : [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "recipientId": {
                            "type": "string"
                          },
                          "signedTime": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "required": [
                        "metaData",
                        "recipientId",
                        "email"
                      ],
                      "type": "array"
                    },
                    "sentDateTime": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "metaData",
                    "envelopeId",
                    "recipientMetaData"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Retrieve Envelope metadata",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:retrievemetadata"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/recipients/{recipientid}": {
      "x-swagstar": {
        "name": "ResendEmail",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Provide recipientId for resending email to a single recipeint and 'all' for all recipients."
          },
          {
            "in": "path",
            "name": "recipientid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "mobileNo": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Resend email to a single or all recipients associated with the given envelope.",
        "x-swagstar": {
          "name": "Resend Email",
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:resendemail"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/recipients/{recipientid}/capture_signature": {
      "x-swagstar": {
        "name": "CaptureSignature",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Provide recipientId of recipients."
          },
          {
            "in": "path",
            "name": "recipientid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "signatureInBase64": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Capture Signature of Recipient for non static completed envelopes.",
        "x-swagstar": {
          "name": "Capture Signature",
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:capturesignature"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/recipients/{recipientid}/signeduri": {
      "x-swagstar": {
        "name": "RecipientSignerURI",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "recipientid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "returnURI",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the exception could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Returns the Recipient Signing URI",
        "x-swagstar": {
          "name": "RecipientSignerURI",
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:envelopesigneruri"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/documents/{documentid}/recipients/{recipientid}/signeduri": {
      "x-swagstar": {
        "name": "RecipientSignerURIPerDocument",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "recipientid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "returnURI",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the exception could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Returns the Recipient Signing URI Per Document (Ex. Clients for JBWere)",
        "x-swagstar": {
          "name": "RecipientSignerURI",
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:envelopesigneruri"
              ]
            }
          }
        }
      }
    },
    "/envelopes/{envelopeid}/recipients/status": {
      "x-swagstar": {
        "name": "RecipientStatusByEnvelopeId",
        "plugins": {
          "route-rate-limiting": {
            "second": 50
          }
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "envelopeid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "recipients": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "recipientStatus": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "id": {
                            "description": "Recipient Id",
                            "type": "number"
                          },
                          "mobile": {
                            "type": "string"
                          },
                          "name": {
                            "description": "Full legal name of the recipient",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "associatedDocs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "documentId": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 400 are, <br> <ul><li>API-454 - Validation Error - Put the validation error message in \"messageAttribute\" field<li>API-430 - Unspecified Error - Thrown for all edge cases, where the expection could NOT be determined<li>API-420 - Invalid request - Thrown for all edge cases, where the expection could NOT be determined<li>API-421 - Invalid request body - Thrown for invalid JSON payload in the request object (Data type error, extra or missing fields)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 401 are, <br> <ul><li>API-449 - Validation Error - Put the validation error message in \"details\" field"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 403 are, <br> <ul><li>API-465 - Validation Error - Put the validation error message in \"details\" field"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 404 are <ul> <li>API-422 - Invalid API Version </li> <li>API-2189 - Resource Not Found </li></ul>"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "description": "Additional details for the error. Mandatory for client side 4xx errors",
                      "items": {
                        "properties": {
                          "field": {
                            "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                            "example": "name",
                            "type": "string"
                          },
                          "issue": {
                            "description": "The reason for the error",
                            "example": "name is required",
                            "type": "string"
                          },
                          "location": {
                            "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                            "example": "body",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the field that caused the error",
                            "example": null,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Errors to be handled under 429 are, <br> <ul><li>API-430 - Validation Error - Put the validation error message in \"details\" field"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errorId": {
                      "description": "Human readable, unique name or unique Id of the error",
                      "example": "API-421",
                      "type": "string"
                    },
                    "informationLink": {
                      "description": "URI for detailed information related to this error for the developer",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message describing the error",
                      "example": "Invalid request body",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Server Timeout"
          }
        },
        "summary": "Retrieve Recipient Status",
        "x-swagstar": {
          "apiAuth": "jwt",
          "apiTarget": [
            "service"
          ],
          "plugins": {
            "openid-connect-v2": {
              "acr": [
                "2"
              ],
              "audience_required": [
                "staffapi",
                "nabapi"
              ],
              "scopes_required": [
                "docmgmt:esignature:getrecipientstatus"
              ]
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "nab_auth": {
        "type": "oauth2",
        "flows": {
          "x-all": {
            "scopes": {
              "docmgmt:esignature:createenvelope": "Create Envelope",
              "docmgmt:esignature:createdigitalenvelope": "Create Digital Envelope",
              "docmgmt:esignature:retrieveenvelope": "Retrieve Envelope",
              "docmgmt:esignature:deleteenvelope": "Delete Envelope",
              "docmgmt:esignature:retrievemetadata": "Retrieve Metadata",
              "docmgmt:esignature:resendemail": "Resend Email",
              "docmgmt:esignature:capturesignature": "Capture Signature",
              "docmgmt:esignature:envelopesigneruri": "Recipient Signing URI",
              "docmgmt:esignature:getrecipientstatus": "Retreieve Recipient Status"
            }
          }
        },
        "description": "Esign API"
      }
    },
    "parameters": {
      "Content-Type": {
        "description": "application/json",
        "in": "header",
        "name": "Content-Type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "userid": {
        "in": "header",
        "name": "userid",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ResendEmailRequest": {
        "properties": {
          "email": {
            "type": "string"
          },
          "mobileNo": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CaptureSignatureResponseBase64": {
        "properties": {
          "signatureInBase64": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDigitalEnvelopeRequest": {
        "properties": {
          "brandId": {
            "description": "brand Id to be used for a given envelope. This brand is reflected at Docusign.",
            "type": "string"
          },
          "createEnvelopeFrom": {
            "description": "to indicate if the envelope is created from template or the fields in the payload",
            "enum": [
              "FIELDS_DEFINITION",
              "MULTIPLE_ENVELOPE_DEFINITION",
              "TEMPLATE_DEFINITION",
              "COMPOSITE_TEMPLATE_DEFINITION"
            ],
            "type": "string"
          },
          "prepopulateData": {
            "description": "if true then need fields array under recipients is mandatory",
            "type": "boolean"
          },
          "emailChannel": {
            "maxLength": 20,
            "type": "string",
            "description": "By default all emails will be sent via nab.com.au channel. If any other domain required, relevant channel need to be provided.Example ADF-NABC."
          },
          "archiveCOC": {
            "type": "boolean",
            "default": false,
            "description": "This flag is required if you need to store Certificate in Completion to archival."
          },
          "cocDocTypeKey": {
            "type": "string",
            "description": "This doctypekey is provided by DMSL team."
          },
          "documents": {
            "items": {
              "properties": {
                "archiveDocument": {
                  "description": "if set to be yes then push to DMSL else do not store in DMSL",
                  "type": "string"
                },
                "docTypeKey": {
                  "description": "doctypekey for each document to store in DMSL",
                  "type": "string"
                },
                "base64": {
                  "description": "The contents of the document encoded as base64",
                  "type": "string"
                },
                "documentId": {
                  "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
                  "maxLength": 15,
                  "type": "string"
                },
                "fileExtension": {
                  "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an error message",
                  "maxLength": 5,
                  "type": "string"
                },
                "isSupplimental": {
                  "description": "Value which indicates whether this is a primary document or supplementary",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                  "maxLength": 50,
                  "type": "string"
                },
                "supplimentalAckType": {
                  "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
                  "enum": [
                    "VIEW",
                    "VIEW_ACCEPT",
                    "VIEW_READ_ACCEPT"
                  ],
                  "type": "string"
                },
                "templateId": {
                  "description": "A user-specified ID that identifies DocuSign Template.",
                  "type": "string"
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "Order of the documents to be displayed on NAB Docs. DisplayOrder is applicable for MULTIPLE_ENVELOPE_DEFINITION and TEMPLATE_DEFINITION."
                }
              },
              "required": [
                "base64",
                "name",
                "documentId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "emailParams": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "businessParams": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "description": "These are additonal params that business needs for a given envelopeId."
          },
          "emailSubject": {
            "maxLength": 30,
            "type": "string"
          },
          "expireAfterInDays": {
            "maximum": 99,
            "minimum": 1,
            "type": "number"
          },
          "recipients": {
            "items": {
              "properties": {
                "associatedDocs": {
                  "items": {
                    "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
                    "properties": {
                      "documentId": {
                        "description": "to indicate documents associated with particular recipient.",
                        "maxLength": 15,
                        "type": "string"
                      }
                    },
                    "required": [
                      "documentId"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "email": {
                  "description": "Email id of the recipient. Notification of the document to sign is sent to this email id.",
                  "maxLength": 100,
                  "type": "string"
                },
                "fields": {
                  "items": {
                    "properties": {
                      "anchorIgnoreIfNotPresent": {
                        "description": "Set to True.  Anchortext in the document and skip over if the field is not required",
                        "type": "boolean"
                      },
                      "anchorString": {
                        "description": "Unique for each recipient signature field, needs to be present on the Document to place the field",
                        "maxLength": 30,
                        "type": "string"
                      },
                      "documentId": {
                        "description": "This is ID should link back to the doucmentID given under the documents array",
                        "maxLength": 15,
                        "type": "string"
                      },
                      "label": {
                        "description": "The Label for the date field",
                        "maxLength": 30,
                        "type": "string"
                      },
                      "required": {
                        "description": "Parameter to set Mandatory or Optional Field",
                        "type": "boolean"
                      },
                      "type": {
                        "enum": [
                          "SIGN",
                          "INITIALS",
                          "DATE",
                          "NUMERIC",
                          "TEXT"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "description": "The data value for the a given label",
                        "type": "string"
                      },
                      "name": {
                        "description": "The HREF value for the given link",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "documentId",
                      "anchorString",
                      "anchorIgnoreIfNotPresent"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "A user-specified ID that identifies the Recipient. If no value is provided, auto generated UUID will be stored.",
                  "type": "number"
                },
                "mobile": {
                  "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process. This value should be unique.",
                  "maxLength": 14,
                  "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                  "type": "string"
                },
                "name": {
                  "description": "Full legal name of the recipient",
                  "maxLength": 100,
                  "type": "string"
                },
                "roleName": {
                  "description": "Signer Rolename is mandatory in Template based Envelope Creation.",
                  "enum": [
                    "SIGNER1",
                    "SIGNER2",
                    "SIGNER3",
                    "SIGNER4",
                    "SIGNER5",
                    "SIGNER6",
                    "SIGNER7",
                    "SIGNER8",
                    "SIGNER9",
                    "SIGNER10",
                    "SIGNER11",
                    "SIGNER12",
                    "SIGNER13",
                    "SIGNER14",
                    "SIGNER15",
                    "SIGNER16",
                    "SIGNER17",
                    "SIGNER18",
                    "SIGNER19",
                    "SIGNER20",
                    "SIGNER21",
                    "SIGNER22",
                    "SIGNER23",
                    "SIGNER24",
                    "SIGNER25",
                    "SIGNER26",
                    "SIGNER27",
                    "SIGNER28",
                    "SIGNER29",
                    "SIGNER30",
                    "SIGNER31",
                    "SIGNER32",
                    "SIGNER33",
                    "SIGNER34",
                    "SIGNER35",
                    "SIGNER36",
                    "SIGNER37",
                    "SIGNER38",
                    "SIGNER39",
                    "SIGNER40",
                    "SIGNER41",
                    "SIGNER42",
                    "SIGNER43",
                    "SIGNER44",
                    "SIGNER45",
                    "SIGNER46",
                    "SIGNER47",
                    "SIGNER48",
                    "SIGNER49",
                    "SIGNER50"
                  ],
                  "type": "string"
                },
                "commName": {
                  "description": "Name of the recipient to be used for Email Comms. Special Character allowed",
                  "maxLength": 20,
                  "type": "string"
                },
                "routingOrder": {
                  "description": "Required if the routingOrderType is set to SEQUENTIAL",
                  "maximum": 99,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "name",
                "email",
                "mobile"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "routingOrderType": {
            "description": "The workflow setting which decides weather recipient will action parallelly or sequentially",
            "enum": [
              "SEQUENTIAL",
              "PARALLEL"
            ],
            "type": "string"
          },
          "wetSignedEnabled": {
            "description": "If wetsigned = true then Print and Sign to be enabled at Docusign else adopt signature to be enabled.",
            "type": "boolean"
          }
        },
        "required": [
          "createEnvelopeFrom",
          "documents",
          "emailSubject",
          "routingOrderType",
          "recipients",
          "wetSignedEnabled"
        ],
        "type": "object"
      },
      "CreateDigitalEnvelopeResponse": {
        "properties": {
          "documents": {
            "items": {
              "properties": {
                "document": {
                  "example": "/<basePath>/envelopes/<nabEnvelopeId>/documents/<documentId>",
                  "type": "string"
                },
                "documentId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "envelopeDetails": {
            "example": "/<basePath>/envelopes/<nabEnvelopeId>",
            "type": "string"
          },
          "nabEnvelopeId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateEnvelopeRequest": {
        "properties": {
          "createEnvelopeFrom": {
            "description": "to indicate if the envelope is created from template.",
            "enum": [
              "TEMPLATE_DEFINITION"
            ],
            "type": "string"
          },
          "documents": {
            "items": {
              "properties": {
                "base64": {
                  "description": "The contents of the document encoded as base64",
                  "type": "string"
                },
                "documentId": {
                  "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
                  "maxLength": 15,
                  "type": "string"
                },
                "fileExtension": {
                  "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an \"unable to load document\" error message",
                  "maxLength": 5,
                  "type": "string"
                },
                "isSupplimental": {
                  "description": "Value which indicates weather this is a primary document or supplementary",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                  "maxLength": 50,
                  "type": "string"
                },
                "supplimentalAckType": {
                  "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
                  "enum": [
                    "view",
                    "view_accept",
                    "view_read_accept"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "documentId",
                "base64",
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "emailSubject": {
            "maxLength": 30,
            "type": "string"
          },
          "expireAfterInDays": {
            "maximum": 99,
            "minimum": 1,
            "type": "number"
          },
          "recipients": {
            "items": {
              "properties": {
                "email": {
                  "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
                  "maxLength": 100,
                  "type": "string"
                },
                "id": {
                  "description": "Recipient Id",
                  "type": "number"
                },
                "mobile": {
                  "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
                  "maxLength": 14,
                  "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                  "type": "string"
                },
                "name": {
                  "description": "Full legal name of the recipient",
                  "maxLength": 100,
                  "type": "string"
                },
                "roleName": {
                  "description": "Signer Rolename is non-mandatory.",
                  "enum": [
                    "SIGNER1",
                    "SIGNER2",
                    "SIGNER3",
                    "SIGNER4",
                    "SIGNER5",
                    "SIGNER6",
                    "SIGNER7",
                    "SIGNER8",
                    "SIGNER9",
                    "SIGNER10"
                  ],
                  "type": "string"
                },
                "routingOrder": {
                  "description": "Required if the routingOrderType is set to SEQUENTIAL",
                  "maximum": 99,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "email",
                "name",
                "mobile"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "routingOrderType": {
            "description": "The workflow setting which decides weather recipient will action parallelly or sequentially",
            "enum": [
              "SEQUENTIAL",
              "PARALLEL"
            ],
            "type": "string"
          },
          "templateId": {
            "description": "Id of the template in DocuSign. Mandatory when envelopeFrom is 'TEAMPLATE_DEFINITION'",
            "type": "string"
          }
        },
        "required": [
          "emailSubject",
          "documents",
          "recipients",
          "routingOrderType",
          "createEnvelopeFrom"
        ],
        "type": "object"
      },
      "CreateEnvelopeResponse": {
        "properties": {
          "documents": {
            "items": {
              "properties": {
                "document": {
                  "example": "/<basePath>/envelopes/<envelopeId>/documents/<documentId>",
                  "type": "string"
                },
                "documentId": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "envelopeDetails": {
            "example": "/<basePath>/envelopes/<envelopeId>",
            "type": "string"
          },
          "envelopeId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DigitalEnvelopeDocumentRequest": {
        "properties": {
          "archiveDocument": {
            "description": "if set to be yes then push to DMSL else do not store in DMSL",
            "type": "string"
          },
          "docTypeKey": {
            "description": "doctypekey for each document to store in DMSL",
            "type": "string"
          },
          "base64": {
            "description": "The contents of the document encoded as base64",
            "type": "string"
          },
          "documentId": {
            "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
            "maxLength": 15,
            "type": "string"
          },
          "fileExtension": {
            "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an error message",
            "maxLength": 5,
            "type": "string"
          },
          "isSupplimental": {
            "description": "Value which indicates whether this is a primary document or supplementary",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
            "maxLength": 50,
            "type": "string"
          },
          "supplimentalAckType": {
            "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
            "enum": [
              "VIEW",
              "VIEW_ACCEPT",
              "VIEW_READ_ACCEPT"
            ],
            "type": "string"
          },
          "templateId": {
            "description": "A user-specified ID that identifies DocuSign Template.",
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "description": "Order of the documents to be displayed on NAB Docs. DisplayOrder is applicable for MULTIPLE_ENVELOPE_DEFINITION and TEMPLATE_DEFINITION."
          }
        },
        "required": [
          "base64",
          "name",
          "documentId"
        ],
        "type": "object"
      },
      "DigitalEnvelopeRecipientRequest": {
        "properties": {
          "associatedDocs": {
            "items": {
              "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
              "properties": {
                "documentId": {
                  "description": "to indicate documents associated with particular recipient.",
                  "maxLength": 15,
                  "type": "string"
                }
              },
              "required": [
                "documentId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id.",
            "maxLength": 100,
            "type": "string"
          },
          "fields": {
            "items": {
              "properties": {
                "anchorIgnoreIfNotPresent": {
                  "description": "Set to True.  Anchortext in the document and skip over if the field is not required",
                  "type": "boolean"
                },
                "anchorString": {
                  "description": "Unique for each recipient signature field, needs to be present on the Document to place the field",
                  "maxLength": 30,
                  "type": "string"
                },
                "documentId": {
                  "description": "This is ID should link back to the doucmentID given under the documents array",
                  "maxLength": 15,
                  "type": "string"
                },
                "label": {
                  "description": "The Label for the date field",
                  "maxLength": 30,
                  "type": "string"
                },
                "required": {
                  "description": "Parameter to set Mandatory or Optional Field",
                  "type": "boolean"
                },
                "type": {
                  "enum": [
                    "SIGN",
                    "INITIALS",
                    "DATE",
                    "NUMERIC",
                    "TEXT"
                  ],
                  "type": "string"
                },
                "value": {
                  "description": "The data value for the a given label",
                  "type": "string"
                },
                "name": {
                  "description": "The HREF value for the given link",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "documentId",
                "anchorString",
                "anchorIgnoreIfNotPresent"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "A user-specified ID that identifies the Recipient. If no value is provided, auto generated UUID will be stored.",
            "type": "number"
          },
          "mobile": {
            "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process. This value should be unique.",
            "maxLength": 14,
            "pattern": "^(\\+|\\d)[0-9]{9,13}$",
            "type": "string"
          },
          "name": {
            "description": "Full legal name of the recipient",
            "maxLength": 100,
            "type": "string"
          },
          "roleName": {
            "description": "Signer Rolename is mandatory in Template based Envelope Creation.",
            "enum": [
              "SIGNER1",
              "SIGNER2",
              "SIGNER3",
              "SIGNER4",
              "SIGNER5",
              "SIGNER6",
              "SIGNER7",
              "SIGNER8",
              "SIGNER9",
              "SIGNER10",
              "SIGNER11",
              "SIGNER12",
              "SIGNER13",
              "SIGNER14",
              "SIGNER15",
              "SIGNER16",
              "SIGNER17",
              "SIGNER18",
              "SIGNER19",
              "SIGNER20",
              "SIGNER21",
              "SIGNER22",
              "SIGNER23",
              "SIGNER24",
              "SIGNER25",
              "SIGNER26",
              "SIGNER27",
              "SIGNER28",
              "SIGNER29",
              "SIGNER30",
              "SIGNER31",
              "SIGNER32",
              "SIGNER33",
              "SIGNER34",
              "SIGNER35",
              "SIGNER36",
              "SIGNER37",
              "SIGNER38",
              "SIGNER39",
              "SIGNER40",
              "SIGNER41",
              "SIGNER42",
              "SIGNER43",
              "SIGNER44",
              "SIGNER45",
              "SIGNER46",
              "SIGNER47",
              "SIGNER48",
              "SIGNER49",
              "SIGNER50"
            ],
            "type": "string"
          },
          "commName": {
            "description": "Name of the recipient to be used for Email Comms. Special Character allowed",
            "maxLength": 20,
            "type": "string"
          },
          "routingOrder": {
            "description": "Required if the routingOrderType is set to SEQUENTIAL",
            "maximum": 99,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "name",
          "email",
          "mobile"
        ],
        "type": "object"
      },
      "DocumentRequest": {
        "properties": {
          "base64": {
            "description": "The contents of the document encoded as base64",
            "type": "string"
          },
          "documentId": {
            "description": "A user-specified ID that identifies this document. You'll use this ID to associate a tab with a document.",
            "maxLength": 15,
            "type": "string"
          },
          "fileExtension": {
            "description": "The file extension type of the document. Non-PDF documents are converted to PDF. If the document is not a PDF, fileExtension is required. If you try to upload a non-PDF document without a fileExtension, you will receive an \"unable to load document\" error message",
            "maxLength": 5,
            "type": "string"
          },
          "isSupplimental": {
            "description": "Value which indicates weather this is a primary document or supplementary",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
            "maxLength": 50,
            "type": "string"
          },
          "supplimentalAckType": {
            "description": "The workflow setting which decides whether recipient will action view or view_read or view_read_accept.Default value is view_read_accept",
            "enum": [
              "view",
              "view_accept",
              "view_read_accept"
            ],
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "base64",
          "name"
        ],
        "type": "object"
      },
      "DocumentResponse": {
        "properties": {
          "docSize": {
            "description": "Size of the document",
            "type": "string"
          },
          "id": {
            "description": "A user-specified ID that identifies this document. This will be used to associate the document by the calling system at a later stage. This has to be unique wihtin the Envelope",
            "type": "string"
          },
          "isSupplimental": {
            "description": "Value which indicates weather this is a primary document or supplementary",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
            "type": "string"
          },
          "uri": {
            "description": "URI of the document download in base64",
            "example": "/envelopes/{envelopeId}/documents/{documentId}",
            "type": "string"
          },
          "displayOrder": {
            "description": "DisplayOrder of the document",
            "type": "number"
          },
          "archiveDocument": {
            "description": "if set to be yes then push to DMSL else do not store in DMSL",
            "type": "string"
          },
          "docTypeKey": {
            "description": "doctypekey for each document to store in DMSL",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "envelopeId": {
            "type": "string"
          },
          "staticDoc": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "uri",
          "name",
          "isSupplimental",
          "docSize"
        ],
        "type": "object"
      },
      "DownloadDocumentResponseBase64": {
        "properties": {
          "documentInBase64": {
            "type": "string"
          }
        },
        "type": "string"
      },
      "Fields": {
        "properties": {
          "anchorIgnoreIfNotPresent": {
            "description": "Set to True.  Anchortext in the document and skip over if the field is not required",
            "type": "boolean"
          },
          "anchorString": {
            "description": "Unique for each recipient signature field, needs to be present on the Document to place the field",
            "maxLength": 30,
            "type": "string"
          },
          "documentId": {
            "description": "This is ID should link back to the doucmentID given under the documents array",
            "maxLength": 15,
            "type": "string"
          },
          "label": {
            "description": "The Label for the date field",
            "maxLength": 30,
            "type": "string"
          },
          "required": {
            "description": "Parameter to set Mandatory or Optional Field",
            "type": "boolean"
          },
          "type": {
            "enum": [
              "SIGN",
              "INITIALS",
              "DATE",
              "NUMERIC",
              "TEXT"
            ],
            "type": "string"
          },
          "value": {
            "description": "The data value for the a given label",
            "type": "string"
          },
          "name": {
            "description": "The HREF value for the given link",
            "type": "string"
          }
        },
        "required": [
          "type",
          "documentId",
          "anchorString",
          "anchorIgnoreIfNotPresent"
        ],
        "type": "object"
      },
      "RecipeintDocumentRequest": {
        "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
        "properties": {
          "documentId": {
            "description": "to indicate documents associated with particular recipient.",
            "maxLength": 15,
            "type": "string"
          }
        },
        "required": [
          "documentId"
        ],
        "type": "object"
      },
      "RecipientRequest": {
        "properties": {
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "description": "Recipient Id",
            "type": "number"
          },
          "mobile": {
            "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
            "maxLength": 14,
            "pattern": "^(\\+|\\d)[0-9]{9,13}$",
            "type": "string"
          },
          "name": {
            "description": "Full legal name of the recipient",
            "maxLength": 100,
            "type": "string"
          },
          "roleName": {
            "description": "Signer Rolename is non-mandatory.",
            "enum": [
              "SIGNER1",
              "SIGNER2",
              "SIGNER3",
              "SIGNER4",
              "SIGNER5",
              "SIGNER6",
              "SIGNER7",
              "SIGNER8",
              "SIGNER9",
              "SIGNER10"
            ],
            "type": "string"
          },
          "routingOrder": {
            "description": "Required if the routingOrderType is set to SEQUENTIAL",
            "maximum": 99,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "email",
          "name",
          "mobile"
        ],
        "type": "object"
      },
      "RecipientResponse": {
        "allOf": [
          {
            "properties": {
              "email": {
                "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
                "maxLength": 100,
                "type": "string"
              },
              "id": {
                "description": "Recipient Id",
                "type": "number"
              },
              "mobile": {
                "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
                "maxLength": 14,
                "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                "type": "string"
              },
              "name": {
                "description": "Full legal name of the recipient",
                "maxLength": 100,
                "type": "string"
              },
              "roleName": {
                "description": "Signer Rolename is non-mandatory.",
                "enum": [
                  "SIGNER1",
                  "SIGNER2",
                  "SIGNER3",
                  "SIGNER4",
                  "SIGNER5",
                  "SIGNER6",
                  "SIGNER7",
                  "SIGNER8",
                  "SIGNER9",
                  "SIGNER10"
                ],
                "type": "string"
              },
              "routingOrder": {
                "description": "Required if the routingOrderType is set to SEQUENTIAL",
                "maximum": 99,
                "minimum": 0,
                "type": "number"
              }
            },
            "required": [
              "email",
              "name",
              "mobile"
            ],
            "type": "object"
          },
          {
            "properties": {
              "recipientStatus": {
                "type": "string"
              },
              "associatedDocs": {
                "items": {
                  "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
                  "properties": {
                    "documentId": {
                      "description": "to indicate documents associated with particular recipient.",
                      "maxLength": 15,
                      "type": "string"
                    }
                  },
                  "required": [
                    "documentId"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "RecipientStatusResponse": {
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "properties": {
                "recipientStatus": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "id": {
                  "description": "Recipient Id",
                  "type": "number"
                },
                "mobile": {
                  "type": "string"
                },
                "name": {
                  "description": "Full legal name of the recipient",
                  "maxLength": 100,
                  "type": "string"
                },
                "associatedDocs": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "documentId": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "DigitalRetrieveEnvelopeResponse": {
        "properties": {
          "certificateOfCompletionUri": {
            "example": "/<basePath>/envelopes/{envelopeId}/documents/certificate",
            "type": "string"
          },
          "declineBy": {
            "type": "string"
          },
          "declineReason": {
            "type": "string"
          },
          "brandId": {
            "description": "brand Id to be used for a given envelope.",
            "type": "string"
          },
          "emailChannel": {
            "maxLength": 20,
            "type": "string"
          },
          "archiveCOC": {
            "type": "boolean",
            "default": false
          },
          "cocDocTypeKey": {
            "type": "string"
          },
          "emailParams": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "businessParams": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "documents": {
            "items": {
              "properties": {
                "docSize": {
                  "description": "Size of the document",
                  "type": "string"
                },
                "id": {
                  "description": "A user-specified ID that identifies this document. This will be used to associate the document by the calling system at a later stage. This has to be unique wihtin the Envelope",
                  "type": "string"
                },
                "isSupplimental": {
                  "description": "Value which indicates weather this is a primary document or supplementary",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the document. This is the name that appears in the text of the email and when the recipient retrieves the document",
                  "type": "string"
                },
                "uri": {
                  "description": "URI of the document download in base64",
                  "example": "/envelopes/{envelopeId}/documents/{documentId}",
                  "type": "string"
                },
                "displayOrder": {
                  "description": "DisplayOrder of the document",
                  "type": "number"
                },
                "archiveDocument": {
                  "description": "if set to be yes then push to DMSL else do not store in DMSL",
                  "type": "string"
                },
                "docTypeKey": {
                  "description": "doctypekey for each document to store in DMSL",
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "envelopeId": {
                  "type": "string"
                },
                "staticDoc": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "uri",
                "name",
                "isSupplimental",
                "docSize"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "emailSubject": {
            "type": "string"
          },
          "expireAfterInDays": {
            "maximum": 99,
            "minimum": 1,
            "type": "number"
          },
          "recipients": {
            "items": {
              "allOf": [
                {
                  "properties": {
                    "email": {
                      "description": "Email id of the recipient. Notification of the document to sign is sent to this email id",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "id": {
                      "description": "Recipient Id",
                      "type": "number"
                    },
                    "mobile": {
                      "description": "This mobile number would be used to send One Time Password (OTP) for electornic signature process",
                      "maxLength": 14,
                      "pattern": "^(\\+|\\d)[0-9]{9,13}$",
                      "type": "string"
                    },
                    "name": {
                      "description": "Full legal name of the recipient",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "roleName": {
                      "description": "Signer Rolename is non-mandatory.",
                      "enum": [
                        "SIGNER1",
                        "SIGNER2",
                        "SIGNER3",
                        "SIGNER4",
                        "SIGNER5",
                        "SIGNER6",
                        "SIGNER7",
                        "SIGNER8",
                        "SIGNER9",
                        "SIGNER10"
                      ],
                      "type": "string"
                    },
                    "routingOrder": {
                      "description": "Required if the routingOrderType is set to SEQUENTIAL",
                      "maximum": 99,
                      "minimum": 0,
                      "type": "number"
                    }
                  },
                  "required": [
                    "email",
                    "name",
                    "mobile"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "recipientStatus": {
                      "type": "string"
                    },
                    "associatedDocs": {
                      "items": {
                        "description": "It is mandatory only when createEnvelopeFrom is MULTIPLE_ENVELOPE_DEFINITION,",
                        "properties": {
                          "documentId": {
                            "description": "to indicate documents associated with particular recipient.",
                            "maxLength": 15,
                            "type": "string"
                          }
                        },
                        "required": [
                          "documentId"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "routingOrderType": {
            "description": "specifies if there is a set order for the documents to be signed or if all signers can sign in any sequense",
            "enum": [
              "SEQUENTIAL",
              "PARALLEL"
            ],
            "type": "string"
          },
          "status": {
            "enum": [
              "SENT",
              "COMPLETED",
              "VOIDED",
              "DECLINED"
            ],
            "type": "string"
          },
          "wetSignedEnabled": {
            "type": "boolean"
          },
          "envelopeCreationDate": {
            "type": "string"
          },
          "envelopeExpiryDate": {
            "type": "string"
          },
          "remainingDaysToExpire": {
            "type": "string"
          }
        },
        "required": [
          "wetSignedEnabled",
          "status",
          "emailSubject",
          "documents",
          "recipients"
        ],
        "type": "object"
      },
      "RetrieveMetadataResponse": {
        "properties": {
          "envelopeId": {
            "type": "string"
          },
          "metaData": {
            "items": {
              "properties": {
                "anchorString": {
                  "description": "Anchor string is identifier passsed aspart of the request or defined in template for the individual ui controls in case of text box.\\nGroup name/label for radio buttons and checkbox control which are grouped controls",
                  "example": [
                    "FNQ_1"
                  ],
                  "type": "string"
                },
                "values": {
                  "items": {
                    "description": "1.Text boxes - value will be the value entered in the text box 2.Radio Buttons: value will be the value of the selected radio button. 3.Checkbox: value will be array of the concatanated string with individual anchor string and checked statuslike [\"FNQ_1:checked\",\"FNQ_2:\"\"\"].  ",
                    "example": "1.Text box : \"entered text by user\"\n2.Radio Button: 1 or 0\n3.Check boxes : [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "recipientMetaData": {
            "items": {
              "properties": {
                "deliveredTime": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "metaData": {
                  "items": {
                    "properties": {
                      "anchorString": {
                        "description": "Anchor string is identifier passsed aspart of the request or defined in template for the individual ui controls in case of text box.\\nGroup name/label for radio buttons and checkbox control which are grouped controls",
                        "example": [
                          "FNQ_1"
                        ],
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "description": "1.Text boxes - value will be the value entered in the text box 2.Radio Buttons: value will be the value of the selected radio button. 3.Checkbox: value will be array of the concatanated string with individual anchor string and checked status like [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]. ",
                          "example": "1.Text box : \"entered text by user\"\n2.Radio Button: 1 or 0\n3.Check boxes : [\"FNQ_1:checked\",\"FNQ_2:\"\"\"]",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "recipientId": {
                  "type": "string"
                },
                "signedTime": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "required": [
              "metaData",
              "recipientId",
              "email"
            ],
            "type": "array"
          },
          "sentDateTime": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "metaData",
          "envelopeId",
          "recipientMetaData"
        ],
        "type": "object"
      },
      "SigningUriResponse": {
        "properties": {
          "uri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SignUrlResponse": {
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StandardError": {
        "properties": {
          "errorId": {
            "description": "Human readable, unique name or unique Id of the error",
            "example": "API-421",
            "type": "string"
          },
          "informationLink": {
            "description": "URI for detailed information related to this error for the developer",
            "type": "string"
          },
          "message": {
            "description": "Message describing the error",
            "example": "Invalid request body",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "details": {
            "description": "Additional details for the error. Mandatory for client side 4xx errors",
            "items": {
              "properties": {
                "field": {
                  "description": "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors",
                  "example": "name",
                  "type": "string"
                },
                "issue": {
                  "description": "The reason for the error",
                  "example": "name is required",
                  "type": "string"
                },
                "location": {
                  "description": "The location of the field that caused the error. A valid value is body, path, or query. Default is body.",
                  "example": "body",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the field that caused the error",
                  "example": null,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "errorId": {
            "description": "Human readable, unique name or unique Id of the error",
            "example": "API-421",
            "type": "string"
          },
          "informationLink": {
            "description": "URI for detailed information related to this error for the developer",
            "type": "string"
          },
          "message": {
            "description": "Message describing the error",
            "example": "Invalid request body",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "externalDocs": {
    "url": "https://confluence.dss.ext.national.com.au/pages/viewpage.action?pageId=639603273"
  },
  "x-swagstar": {
    "category": "Document Management:Document Services"
  }
}